<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="0" total="31" passed="30">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="724446" started-at="2020-06-20T14:04:25Z" finished-at="2020-06-20T14:16:29Z">
    <groups>
      <group name="negative">
        <method signature="TestScript.invalidDataSearchBoxValidation(java.lang.String)[pri:6, instance:com.selenium.testScripts.TestScript@1593948d]" name="invalidDataSearchBoxValidation" class="com.selenium.testScripts.TestScript"/>
        <method signature="TestScript.invalidEmailLoginErrorMessageValidation()[pri:2, instance:com.selenium.testScripts.TestScript@1593948d]" name="invalidEmailLoginErrorMessageValidation" class="com.selenium.testScripts.TestScript"/>
        <method signature="TestScript.invalidPasswordloginErrorMessageValidation()[pri:3, instance:com.selenium.testScripts.TestScript@1593948d]" name="invalidPasswordloginErrorMessageValidation" class="com.selenium.testScripts.TestScript"/>
      </group> <!-- negative -->
      <group name="regression">
        <method signature="TestScript.getBookshelvesNameAndPrice(java.lang.String)[pri:16, instance:com.selenium.testScripts.TestScript@20e2cbe0]" name="getBookshelvesNameAndPrice" class="com.selenium.testScripts.TestScript"/>
        <method signature="TestScript.getStudyChairsNameAndPrice(java.lang.String)[pri:10, instance:com.selenium.testScripts.TestScript@20e2cbe0]" name="getStudyChairsNameAndPrice" class="com.selenium.testScripts.TestScript"/>
        <method signature="TestScript.giftCardsFormValidation(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:22, instance:com.selenium.testScripts.TestScript@20e2cbe0]" name="giftCardsFormValidation" class="com.selenium.testScripts.TestScript"/>
        <method signature="TestScript.validLoginCredentialsValidation()[pri:4, instance:com.selenium.testScripts.TestScript@20e2cbe0]" name="validLoginCredentialsValidation" class="com.selenium.testScripts.TestScript"/>
        <method signature="TestScript.getBookshelvesNameAndPrice(java.lang.String)[pri:16, instance:com.selenium.testScripts.TestScript@1593948d]" name="getBookshelvesNameAndPrice" class="com.selenium.testScripts.TestScript"/>
        <method signature="TestScript.getStudyChairsNameAndPrice(java.lang.String)[pri:10, instance:com.selenium.testScripts.TestScript@1593948d]" name="getStudyChairsNameAndPrice" class="com.selenium.testScripts.TestScript"/>
        <method signature="TestScript.giftCardsFormValidation(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:22, instance:com.selenium.testScripts.TestScript@1593948d]" name="giftCardsFormValidation" class="com.selenium.testScripts.TestScript"/>
        <method signature="TestScript.validLoginCredentialsValidation()[pri:4, instance:com.selenium.testScripts.TestScript@1593948d]" name="validLoginCredentialsValidation" class="com.selenium.testScripts.TestScript"/>
      </group> <!-- regression -->
      <group name="smoke">
        <method signature="TestScript.loginIconValidation()[pri:1, instance:com.selenium.testScripts.TestScript@3a82f6ef]" name="loginIconValidation" class="com.selenium.testScripts.TestScript"/>
        <method signature="TestScript.searchBoxValidation(java.lang.String)[pri:5, instance:com.selenium.testScripts.TestScript@3a82f6ef]" name="searchBoxValidation" class="com.selenium.testScripts.TestScript"/>
        <method signature="TestScript.urlValidation()[pri:0, instance:com.selenium.testScripts.TestScript@3a82f6ef]" name="urlValidation" class="com.selenium.testScripts.TestScript"/>
        <method signature="TestScript.loginIconValidation()[pri:1, instance:com.selenium.testScripts.TestScript@1593948d]" name="loginIconValidation" class="com.selenium.testScripts.TestScript"/>
        <method signature="TestScript.searchBoxValidation(java.lang.String)[pri:5, instance:com.selenium.testScripts.TestScript@1593948d]" name="searchBoxValidation" class="com.selenium.testScripts.TestScript"/>
        <method signature="TestScript.urlValidation()[pri:0, instance:com.selenium.testScripts.TestScript@1593948d]" name="urlValidation" class="com.selenium.testScripts.TestScript"/>
      </group> <!-- smoke -->
    </groups>
    <test name="Smoke Test" duration-ms="164542" started-at="2020-06-20T14:04:25Z" finished-at="2020-06-20T14:07:09Z">
      <class name="com.selenium.testScripts.TestScript">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:com.selenium.testScripts.TestScript@3a82f6ef]" name="beforeTest" is-config="true" duration-ms="18979" started-at="2020-06-20T19:34:25Z" finished-at="2020-06-20T19:34:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeEachMethod(java.lang.reflect.Method)[pri:0, instance:com.selenium.testScripts.TestScript@3a82f6ef]" name="beforeEachMethod" is-config="true" duration-ms="6428" started-at="2020-06-20T19:34:44Z" finished-at="2020-06-20T19:34:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.selenium.testScripts.TestScript.urlValidation()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachMethod -->
        <test-method status="PASS" signature="urlValidation()[pri:0, instance:com.selenium.testScripts.TestScript@3a82f6ef]" name="urlValidation" duration-ms="165" started-at="2020-06-20T19:34:50Z" finished-at="2020-06-20T19:34:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- urlValidation -->
        <test-method status="PASS" signature="afterEachMethod(org.testng.ITestResult)[pri:0, instance:com.selenium.testScripts.TestScript@3a82f6ef]" name="afterEachMethod" is-config="true" duration-ms="8" started-at="2020-06-20T19:34:50Z" finished-at="2020-06-20T19:34:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=urlValidation status=SUCCESS method=TestScript.urlValidation()[pri:0, instance:com.selenium.testScripts.TestScript@3a82f6ef] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="beforeEachMethod(java.lang.reflect.Method)[pri:0, instance:com.selenium.testScripts.TestScript@3a82f6ef]" name="beforeEachMethod" is-config="true" duration-ms="5861" started-at="2020-06-20T19:34:50Z" finished-at="2020-06-20T19:34:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.selenium.testScripts.TestScript.loginIconValidation()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachMethod -->
        <test-method status="SKIP" signature="loginIconValidation()[pri:1, instance:com.selenium.testScripts.TestScript@3a82f6ef]" name="loginIconValidation" duration-ms="90209" started-at="2020-06-20T19:34:56Z" finished-at="2020-06-20T19:36:26Z">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for visibility of element located by By.partialLinkText: Close (tried for 60 second(s) with 500 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of element located by By.partialLinkText: Close (tried for 60 second(s) with 500 milliseconds interval)
	at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:95)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:272)
	at com.selenium.utilities.HandlingAlerts.popup(HandlingAlerts.java:14)
	at com.selenium.main.MainClass.closePopup(MainClass.java:74)
	at com.selenium.testScripts.TestScript.loginIconValidation(TestScript.java:150)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:281)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:121)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"partial link text","selector":"Close"}
  (Session info: chrome=83.0.4103.106)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-66KSTJD3', ip: '192.168.0.105', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_251'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 83.0.4103.106, chrome: {chromedriverVersion: 83.0.4103.39 (ccbf011cb2d2b..., userDataDir: C:\Users\Sathya\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:49590}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: 8ae2e833d75a1304532bbb632b96a4a1
*** Element info: {Using=partial link text, value=Close}
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByPartialLinkText(RemoteWebDriver.java:388)
	at org.openqa.selenium.By$ByPartialLinkText.findElement(By.java:250)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
	at org.openqa.selenium.support.ui.ExpectedConditions$7.apply(ExpectedConditions.java:205)
	at org.openqa.selenium.support.ui.ExpectedConditions$7.apply(ExpectedConditions.java:201)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:249)
	... 30 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginIconValidation -->
        <test-method status="PASS" signature="afterEachMethod(org.testng.ITestResult)[pri:0, instance:com.selenium.testScripts.TestScript@3a82f6ef]" name="afterEachMethod" is-config="true" duration-ms="3" started-at="2020-06-20T19:36:26Z" finished-at="2020-06-20T19:36:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginIconValidation status=SKIP method=TestScript.loginIconValidation()[pri:1, instance:com.selenium.testScripts.TestScript@3a82f6ef] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="beforeEachMethod(java.lang.reflect.Method)[pri:0, instance:com.selenium.testScripts.TestScript@3a82f6ef]" name="beforeEachMethod" is-config="true" duration-ms="6577" started-at="2020-06-20T19:36:26Z" finished-at="2020-06-20T19:36:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.selenium.testScripts.TestScript.loginIconValidation()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachMethod -->
        <test-method status="PASS" signature="loginIconValidation()[pri:1, instance:com.selenium.testScripts.TestScript@3a82f6ef]" name="loginIconValidation" duration-ms="26951" started-at="2020-06-20T19:36:33Z" finished-at="2020-06-20T19:37:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginIconValidation -->
        <test-method status="PASS" signature="afterEachMethod(org.testng.ITestResult)[pri:0, instance:com.selenium.testScripts.TestScript@3a82f6ef]" name="afterEachMethod" is-config="true" duration-ms="1" started-at="2020-06-20T19:37:00Z" finished-at="2020-06-20T19:37:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginIconValidation status=SUCCESS method=TestScript.loginIconValidation()[pri:1, instance:com.selenium.testScripts.TestScript@3a82f6ef] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="beforeEachMethod(java.lang.reflect.Method)[pri:0, instance:com.selenium.testScripts.TestScript@3a82f6ef]" name="beforeEachMethod" is-config="true" duration-ms="6453" started-at="2020-06-20T19:37:00Z" finished-at="2020-06-20T19:37:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.selenium.testScripts.TestScript.searchBoxValidation(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachMethod -->
        <test-method status="PASS" signature="searchBoxValidation(java.lang.String)[pri:5, instance:com.selenium.testScripts.TestScript@3a82f6ef]" name="searchBoxValidation" duration-ms="1112" started-at="2020-06-20T19:37:07Z" data-provider="searchData" finished-at="2020-06-20T19:37:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Study Chairs]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchBoxValidation -->
        <test-method status="PASS" signature="afterEachMethod(org.testng.ITestResult)[pri:0, instance:com.selenium.testScripts.TestScript@3a82f6ef]" name="afterEachMethod" is-config="true" duration-ms="0" started-at="2020-06-20T19:37:08Z" finished-at="2020-06-20T19:37:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchBoxValidation status=SUCCESS method=TestScript.searchBoxValidation(java.lang.String)[pri:5, instance:com.selenium.testScripts.TestScript@3a82f6ef] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:com.selenium.testScripts.TestScript@3a82f6ef]" name="afterTest" is-config="true" duration-ms="1144" started-at="2020-06-20T19:37:08Z" finished-at="2020-06-20T19:37:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- com.selenium.testScripts.TestScript -->
    </test> <!-- Smoke Test -->
    <test name="Regression Test" duration-ms="125734" started-at="2020-06-20T14:07:09Z" finished-at="2020-06-20T14:09:15Z">
      <class name="com.selenium.testScripts.TestScript">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:com.selenium.testScripts.TestScript@20e2cbe0]" name="beforeTest" is-config="true" duration-ms="16843" started-at="2020-06-20T19:37:09Z" finished-at="2020-06-20T19:37:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeEachMethod(java.lang.reflect.Method)[pri:0, instance:com.selenium.testScripts.TestScript@20e2cbe0]" name="beforeEachMethod" is-config="true" duration-ms="6603" started-at="2020-06-20T19:37:26Z" finished-at="2020-06-20T19:37:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.selenium.testScripts.TestScript.validLoginCredentialsValidation()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachMethod -->
        <test-method status="PASS" signature="validLoginCredentialsValidation()[pri:4, instance:com.selenium.testScripts.TestScript@20e2cbe0]" name="validLoginCredentialsValidation" duration-ms="39204" started-at="2020-06-20T19:37:33Z" finished-at="2020-06-20T19:38:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validLoginCredentialsValidation -->
        <test-method status="PASS" signature="afterEachMethod(org.testng.ITestResult)[pri:0, instance:com.selenium.testScripts.TestScript@20e2cbe0]" name="afterEachMethod" is-config="true" duration-ms="1" started-at="2020-06-20T19:38:12Z" finished-at="2020-06-20T19:38:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validLoginCredentialsValidation status=SUCCESS method=TestScript.validLoginCredentialsValidation()[pri:4, instance:com.selenium.testScripts.TestScript@20e2cbe0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="beforeEachMethod(java.lang.reflect.Method)[pri:0, instance:com.selenium.testScripts.TestScript@20e2cbe0]" name="beforeEachMethod" is-config="true" duration-ms="6247" started-at="2020-06-20T19:38:12Z" finished-at="2020-06-20T19:38:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.selenium.testScripts.TestScript.getStudyChairsNameAndPrice(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachMethod -->
        <test-method status="PASS" signature="getStudyChairsNameAndPrice(java.lang.String)[pri:10, instance:com.selenium.testScripts.TestScript@20e2cbe0]" name="getStudyChairsNameAndPrice" duration-ms="11313" started-at="2020-06-20T19:38:18Z" data-provider="searchData" finished-at="2020-06-20T19:38:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Study Chairs]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getStudyChairsNameAndPrice -->
        <test-method status="PASS" signature="afterEachMethod(org.testng.ITestResult)[pri:0, instance:com.selenium.testScripts.TestScript@20e2cbe0]" name="afterEachMethod" is-config="true" duration-ms="0" started-at="2020-06-20T19:38:29Z" finished-at="2020-06-20T19:38:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getStudyChairsNameAndPrice status=SUCCESS method=TestScript.getStudyChairsNameAndPrice(java.lang.String)[pri:10, instance:com.selenium.testScripts.TestScript@20e2cbe0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="beforeEachMethod(java.lang.reflect.Method)[pri:0, instance:com.selenium.testScripts.TestScript@20e2cbe0]" name="beforeEachMethod" is-config="true" duration-ms="6679" started-at="2020-06-20T19:38:29Z" finished-at="2020-06-20T19:38:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.selenium.testScripts.TestScript.getBookshelvesNameAndPrice(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachMethod -->
        <test-method status="PASS" signature="getBookshelvesNameAndPrice(java.lang.String)[pri:16, instance:com.selenium.testScripts.TestScript@20e2cbe0]" name="getBookshelvesNameAndPrice" duration-ms="20575" started-at="2020-06-20T19:38:36Z" data-provider="searchData" finished-at="2020-06-20T19:38:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Bookshelves]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getBookshelvesNameAndPrice -->
        <test-method status="PASS" signature="afterEachMethod(org.testng.ITestResult)[pri:0, instance:com.selenium.testScripts.TestScript@20e2cbe0]" name="afterEachMethod" is-config="true" duration-ms="0" started-at="2020-06-20T19:38:57Z" finished-at="2020-06-20T19:38:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getBookshelvesNameAndPrice status=SUCCESS method=TestScript.getBookshelvesNameAndPrice(java.lang.String)[pri:16, instance:com.selenium.testScripts.TestScript@20e2cbe0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="beforeEachMethod(java.lang.reflect.Method)[pri:0, instance:com.selenium.testScripts.TestScript@20e2cbe0]" name="beforeEachMethod" is-config="true" duration-ms="5981" started-at="2020-06-20T19:38:57Z" finished-at="2020-06-20T19:39:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.selenium.testScripts.TestScript.giftCardsFormValidation(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachMethod -->
        <test-method status="PASS" signature="giftCardsFormValidation(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:22, instance:com.selenium.testScripts.TestScript@20e2cbe0]" name="giftCardsFormValidation" duration-ms="11392" started-at="2020-06-20T19:39:03Z" data-provider="searchData" finished-at="2020-06-20T19:39:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sathya@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[sathya@gmail.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Coders]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[codersshelfgmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[9.87654321E9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- giftCardsFormValidation -->
        <test-method status="PASS" signature="afterEachMethod(org.testng.ITestResult)[pri:0, instance:com.selenium.testScripts.TestScript@20e2cbe0]" name="afterEachMethod" is-config="true" duration-ms="1" started-at="2020-06-20T19:39:14Z" finished-at="2020-06-20T19:39:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=giftCardsFormValidation status=SUCCESS method=TestScript.giftCardsFormValidation(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:22, instance:com.selenium.testScripts.TestScript@20e2cbe0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:com.selenium.testScripts.TestScript@20e2cbe0]" name="afterTest" is-config="true" duration-ms="840" started-at="2020-06-20T19:39:14Z" finished-at="2020-06-20T19:39:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- com.selenium.testScripts.TestScript -->
    </test> <!-- Regression Test -->
    <test name="E2E testing" duration-ms="434131" started-at="2020-06-20T14:09:15Z" finished-at="2020-06-20T14:16:29Z">
      <class name="com.selenium.testScripts.TestScript">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:com.selenium.testScripts.TestScript@1593948d]" name="beforeTest" is-config="true" duration-ms="18188" started-at="2020-06-20T19:39:15Z" finished-at="2020-06-20T19:39:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeEachMethod(java.lang.reflect.Method)[pri:0, instance:com.selenium.testScripts.TestScript@1593948d]" name="beforeEachMethod" is-config="true" duration-ms="6466" started-at="2020-06-20T19:39:33Z" finished-at="2020-06-20T19:39:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.selenium.testScripts.TestScript.urlValidation()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachMethod -->
        <test-method status="PASS" signature="urlValidation()[pri:0, instance:com.selenium.testScripts.TestScript@1593948d]" name="urlValidation" duration-ms="267" started-at="2020-06-20T19:39:40Z" finished-at="2020-06-20T19:39:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- urlValidation -->
        <test-method status="PASS" signature="afterEachMethod(org.testng.ITestResult)[pri:0, instance:com.selenium.testScripts.TestScript@1593948d]" name="afterEachMethod" is-config="true" duration-ms="1" started-at="2020-06-20T19:39:40Z" finished-at="2020-06-20T19:39:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=urlValidation status=SUCCESS method=TestScript.urlValidation()[pri:0, instance:com.selenium.testScripts.TestScript@1593948d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="beforeEachMethod(java.lang.reflect.Method)[pri:0, instance:com.selenium.testScripts.TestScript@1593948d]" name="beforeEachMethod" is-config="true" duration-ms="5989" started-at="2020-06-20T19:39:40Z" finished-at="2020-06-20T19:39:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.selenium.testScripts.TestScript.loginIconValidation()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachMethod -->
        <test-method status="PASS" signature="loginIconValidation()[pri:1, instance:com.selenium.testScripts.TestScript@1593948d]" name="loginIconValidation" duration-ms="27072" started-at="2020-06-20T19:39:46Z" finished-at="2020-06-20T19:40:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginIconValidation -->
        <test-method status="PASS" signature="afterEachMethod(org.testng.ITestResult)[pri:0, instance:com.selenium.testScripts.TestScript@1593948d]" name="afterEachMethod" is-config="true" duration-ms="1" started-at="2020-06-20T19:40:13Z" finished-at="2020-06-20T19:40:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginIconValidation status=SUCCESS method=TestScript.loginIconValidation()[pri:1, instance:com.selenium.testScripts.TestScript@1593948d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="beforeEachMethod(java.lang.reflect.Method)[pri:0, instance:com.selenium.testScripts.TestScript@1593948d]" name="beforeEachMethod" is-config="true" duration-ms="6277" started-at="2020-06-20T19:40:13Z" finished-at="2020-06-20T19:40:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.selenium.testScripts.TestScript.invalidEmailLoginErrorMessageValidation()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachMethod -->
        <test-method status="PASS" signature="invalidEmailLoginErrorMessageValidation()[pri:2, instance:com.selenium.testScripts.TestScript@1593948d]" name="invalidEmailLoginErrorMessageValidation" duration-ms="32904" started-at="2020-06-20T19:40:19Z" finished-at="2020-06-20T19:40:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidEmailLoginErrorMessageValidation -->
        <test-method status="PASS" signature="afterEachMethod(org.testng.ITestResult)[pri:0, instance:com.selenium.testScripts.TestScript@1593948d]" name="afterEachMethod" is-config="true" duration-ms="2" started-at="2020-06-20T19:40:52Z" finished-at="2020-06-20T19:40:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidEmailLoginErrorMessageValidation status=SUCCESS method=TestScript.invalidEmailLoginErrorMessageValidation()[pri:2, instance:com.selenium.testScripts.TestScript@1593948d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="beforeEachMethod(java.lang.reflect.Method)[pri:0, instance:com.selenium.testScripts.TestScript@1593948d]" name="beforeEachMethod" is-config="true" duration-ms="6208" started-at="2020-06-20T19:40:52Z" finished-at="2020-06-20T19:40:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.selenium.testScripts.TestScript.invalidPasswordloginErrorMessageValidation()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachMethod -->
        <test-method status="PASS" signature="invalidPasswordloginErrorMessageValidation()[pri:3, instance:com.selenium.testScripts.TestScript@1593948d]" name="invalidPasswordloginErrorMessageValidation" duration-ms="33845" started-at="2020-06-20T19:40:58Z" finished-at="2020-06-20T19:41:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidPasswordloginErrorMessageValidation -->
        <test-method status="PASS" signature="afterEachMethod(org.testng.ITestResult)[pri:0, instance:com.selenium.testScripts.TestScript@1593948d]" name="afterEachMethod" is-config="true" duration-ms="3" started-at="2020-06-20T19:41:32Z" finished-at="2020-06-20T19:41:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidPasswordloginErrorMessageValidation status=SUCCESS method=TestScript.invalidPasswordloginErrorMessageValidation()[pri:3, instance:com.selenium.testScripts.TestScript@1593948d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="beforeEachMethod(java.lang.reflect.Method)[pri:0, instance:com.selenium.testScripts.TestScript@1593948d]" name="beforeEachMethod" is-config="true" duration-ms="6319" started-at="2020-06-20T19:41:32Z" finished-at="2020-06-20T19:41:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.selenium.testScripts.TestScript.validLoginCredentialsValidation()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachMethod -->
        <test-method status="PASS" signature="validLoginCredentialsValidation()[pri:4, instance:com.selenium.testScripts.TestScript@1593948d]" name="validLoginCredentialsValidation" duration-ms="38764" started-at="2020-06-20T19:41:38Z" finished-at="2020-06-20T19:42:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validLoginCredentialsValidation -->
        <test-method status="PASS" signature="afterEachMethod(org.testng.ITestResult)[pri:0, instance:com.selenium.testScripts.TestScript@1593948d]" name="afterEachMethod" is-config="true" duration-ms="3" started-at="2020-06-20T19:42:17Z" finished-at="2020-06-20T19:42:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validLoginCredentialsValidation status=SUCCESS method=TestScript.validLoginCredentialsValidation()[pri:4, instance:com.selenium.testScripts.TestScript@1593948d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="beforeEachMethod(java.lang.reflect.Method)[pri:0, instance:com.selenium.testScripts.TestScript@1593948d]" name="beforeEachMethod" is-config="true" duration-ms="5978" started-at="2020-06-20T19:42:17Z" finished-at="2020-06-20T19:42:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.selenium.testScripts.TestScript.searchBoxValidation(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachMethod -->
        <test-method status="PASS" signature="searchBoxValidation(java.lang.String)[pri:5, instance:com.selenium.testScripts.TestScript@1593948d]" name="searchBoxValidation" duration-ms="560" started-at="2020-06-20T19:42:23Z" data-provider="searchData" finished-at="2020-06-20T19:42:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Study Chairs]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchBoxValidation -->
        <test-method status="PASS" signature="afterEachMethod(org.testng.ITestResult)[pri:0, instance:com.selenium.testScripts.TestScript@1593948d]" name="afterEachMethod" is-config="true" duration-ms="3" started-at="2020-06-20T19:42:24Z" finished-at="2020-06-20T19:42:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchBoxValidation status=SUCCESS method=TestScript.searchBoxValidation(java.lang.String)[pri:5, instance:com.selenium.testScripts.TestScript@1593948d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="beforeEachMethod(java.lang.reflect.Method)[pri:0, instance:com.selenium.testScripts.TestScript@1593948d]" name="beforeEachMethod" is-config="true" duration-ms="6042" started-at="2020-06-20T19:42:24Z" finished-at="2020-06-20T19:42:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.selenium.testScripts.TestScript.invalidDataSearchBoxValidation(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachMethod -->
        <test-method status="PASS" signature="invalidDataSearchBoxValidation(java.lang.String)[pri:6, instance:com.selenium.testScripts.TestScript@1593948d]" name="invalidDataSearchBoxValidation" duration-ms="2699" started-at="2020-06-20T19:42:30Z" data-provider="searchData" finished-at="2020-06-20T19:42:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[123#]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidDataSearchBoxValidation -->
        <test-method status="PASS" signature="afterEachMethod(org.testng.ITestResult)[pri:0, instance:com.selenium.testScripts.TestScript@1593948d]" name="afterEachMethod" is-config="true" duration-ms="3" started-at="2020-06-20T19:42:33Z" finished-at="2020-06-20T19:42:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidDataSearchBoxValidation status=SUCCESS method=TestScript.invalidDataSearchBoxValidation(java.lang.String)[pri:6, instance:com.selenium.testScripts.TestScript@1593948d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="beforeEachMethod(java.lang.reflect.Method)[pri:0, instance:com.selenium.testScripts.TestScript@1593948d]" name="beforeEachMethod" is-config="true" duration-ms="6133" started-at="2020-06-20T19:42:33Z" finished-at="2020-06-20T19:42:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.selenium.testScripts.TestScript.navigationUsingSearchIconValidation(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachMethod -->
        <test-method status="PASS" signature="navigationUsingSearchIconValidation(java.lang.String)[pri:7, instance:com.selenium.testScripts.TestScript@1593948d]" name="navigationUsingSearchIconValidation" duration-ms="4540" started-at="2020-06-20T19:42:39Z" data-provider="searchData" finished-at="2020-06-20T19:42:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Study Chairs]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigationUsingSearchIconValidation -->
        <test-method status="PASS" signature="afterEachMethod(org.testng.ITestResult)[pri:0, instance:com.selenium.testScripts.TestScript@1593948d]" name="afterEachMethod" is-config="true" duration-ms="1" started-at="2020-06-20T19:42:43Z" finished-at="2020-06-20T19:42:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=navigationUsingSearchIconValidation status=SUCCESS method=TestScript.navigationUsingSearchIconValidation(java.lang.String)[pri:7, instance:com.selenium.testScripts.TestScript@1593948d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="beforeEachMethod(java.lang.reflect.Method)[pri:0, instance:com.selenium.testScripts.TestScript@1593948d]" name="beforeEachMethod" is-config="true" duration-ms="6176" started-at="2020-06-20T19:42:43Z" finished-at="2020-06-20T19:42:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.selenium.testScripts.TestScript.navigationUsingSeacrhIconResultsPageAssertion(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachMethod -->
        <test-method status="PASS" signature="navigationUsingSeacrhIconResultsPageAssertion(java.lang.String)[pri:8, instance:com.selenium.testScripts.TestScript@1593948d]" name="navigationUsingSeacrhIconResultsPageAssertion" duration-ms="5216" started-at="2020-06-20T19:42:49Z" data-provider="searchData" finished-at="2020-06-20T19:42:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Study Chairs]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigationUsingSeacrhIconResultsPageAssertion -->
        <test-method status="PASS" signature="afterEachMethod(org.testng.ITestResult)[pri:0, instance:com.selenium.testScripts.TestScript@1593948d]" name="afterEachMethod" is-config="true" duration-ms="3" started-at="2020-06-20T19:42:55Z" finished-at="2020-06-20T19:42:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=navigationUsingSeacrhIconResultsPageAssertion status=SUCCESS method=TestScript.navigationUsingSeacrhIconResultsPageAssertion(java.lang.String)[pri:8, instance:com.selenium.testScripts.TestScript@1593948d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="beforeEachMethod(java.lang.reflect.Method)[pri:0, instance:com.selenium.testScripts.TestScript@1593948d]" name="beforeEachMethod" is-config="true" duration-ms="6379" started-at="2020-06-20T19:42:55Z" finished-at="2020-06-20T19:43:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.selenium.testScripts.TestScript.sortByFilterValidation(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachMethod -->
        <test-method status="PASS" signature="sortByFilterValidation(java.lang.String)[pri:9, instance:com.selenium.testScripts.TestScript@1593948d]" name="sortByFilterValidation" duration-ms="6883" started-at="2020-06-20T19:43:01Z" data-provider="searchData" finished-at="2020-06-20T19:43:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Study Chairs]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sortByFilterValidation -->
        <test-method status="PASS" signature="afterEachMethod(org.testng.ITestResult)[pri:0, instance:com.selenium.testScripts.TestScript@1593948d]" name="afterEachMethod" is-config="true" duration-ms="2" started-at="2020-06-20T19:43:08Z" finished-at="2020-06-20T19:43:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=sortByFilterValidation status=SUCCESS method=TestScript.sortByFilterValidation(java.lang.String)[pri:9, instance:com.selenium.testScripts.TestScript@1593948d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="beforeEachMethod(java.lang.reflect.Method)[pri:0, instance:com.selenium.testScripts.TestScript@1593948d]" name="beforeEachMethod" is-config="true" duration-ms="5955" started-at="2020-06-20T19:43:08Z" finished-at="2020-06-20T19:43:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.selenium.testScripts.TestScript.getStudyChairsNameAndPrice(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachMethod -->
        <test-method status="PASS" signature="getStudyChairsNameAndPrice(java.lang.String)[pri:10, instance:com.selenium.testScripts.TestScript@1593948d]" name="getStudyChairsNameAndPrice" duration-ms="10074" started-at="2020-06-20T19:43:14Z" data-provider="searchData" finished-at="2020-06-20T19:43:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Study Chairs]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getStudyChairsNameAndPrice -->
        <test-method status="PASS" signature="afterEachMethod(org.testng.ITestResult)[pri:0, instance:com.selenium.testScripts.TestScript@1593948d]" name="afterEachMethod" is-config="true" duration-ms="0" started-at="2020-06-20T19:43:24Z" finished-at="2020-06-20T19:43:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getStudyChairsNameAndPrice status=SUCCESS method=TestScript.getStudyChairsNameAndPrice(java.lang.String)[pri:10, instance:com.selenium.testScripts.TestScript@1593948d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="beforeEachMethod(java.lang.reflect.Method)[pri:0, instance:com.selenium.testScripts.TestScript@1593948d]" name="beforeEachMethod" is-config="true" duration-ms="6301" started-at="2020-06-20T19:43:24Z" finished-at="2020-06-20T19:43:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.selenium.testScripts.TestScript.navigationUsingSuggestionsValidation(java.lang.String) throws java.lang.InterruptedException,org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachMethod -->
        <test-method status="PASS" signature="navigationUsingSuggestionsValidation(java.lang.String)[pri:11, instance:com.selenium.testScripts.TestScript@1593948d]" name="navigationUsingSuggestionsValidation" duration-ms="7205" started-at="2020-06-20T19:43:30Z" data-provider="searchData" finished-at="2020-06-20T19:43:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Bookshelves]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigationUsingSuggestionsValidation -->
        <test-method status="PASS" signature="afterEachMethod(org.testng.ITestResult)[pri:0, instance:com.selenium.testScripts.TestScript@1593948d]" name="afterEachMethod" is-config="true" duration-ms="2" started-at="2020-06-20T19:43:37Z" finished-at="2020-06-20T19:43:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=navigationUsingSuggestionsValidation status=SUCCESS method=TestScript.navigationUsingSuggestionsValidation(java.lang.String)[pri:11, instance:com.selenium.testScripts.TestScript@1593948d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="beforeEachMethod(java.lang.reflect.Method)[pri:0, instance:com.selenium.testScripts.TestScript@1593948d]" name="beforeEachMethod" is-config="true" duration-ms="5877" started-at="2020-06-20T19:43:37Z" finished-at="2020-06-20T19:43:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.selenium.testScripts.TestScript.navigateUsingSuggestionsResultPageAssertion(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachMethod -->
        <test-method status="PASS" signature="navigateUsingSuggestionsResultPageAssertion(java.lang.String)[pri:12, instance:com.selenium.testScripts.TestScript@1593948d]" name="navigateUsingSuggestionsResultPageAssertion" duration-ms="2894" started-at="2020-06-20T19:43:43Z" data-provider="searchData" finished-at="2020-06-20T19:43:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Bookshelves]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateUsingSuggestionsResultPageAssertion -->
        <test-method status="PASS" signature="afterEachMethod(org.testng.ITestResult)[pri:0, instance:com.selenium.testScripts.TestScript@1593948d]" name="afterEachMethod" is-config="true" duration-ms="1" started-at="2020-06-20T19:43:46Z" finished-at="2020-06-20T19:43:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=navigateUsingSuggestionsResultPageAssertion status=SUCCESS method=TestScript.navigateUsingSuggestionsResultPageAssertion(java.lang.String)[pri:12, instance:com.selenium.testScripts.TestScript@1593948d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="beforeEachMethod(java.lang.reflect.Method)[pri:0, instance:com.selenium.testScripts.TestScript@1593948d]" name="beforeEachMethod" is-config="true" duration-ms="6403" started-at="2020-06-20T19:43:46Z" finished-at="2020-06-20T19:43:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.selenium.testScripts.TestScript.priceFilterValidation(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachMethod -->
        <test-method status="PASS" signature="priceFilterValidation(java.lang.String)[pri:13, instance:com.selenium.testScripts.TestScript@1593948d]" name="priceFilterValidation" duration-ms="9166" started-at="2020-06-20T19:43:53Z" data-provider="searchData" finished-at="2020-06-20T19:44:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Bookshelves]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- priceFilterValidation -->
        <test-method status="PASS" signature="afterEachMethod(org.testng.ITestResult)[pri:0, instance:com.selenium.testScripts.TestScript@1593948d]" name="afterEachMethod" is-config="true" duration-ms="1" started-at="2020-06-20T19:44:02Z" finished-at="2020-06-20T19:44:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=priceFilterValidation status=SUCCESS method=TestScript.priceFilterValidation(java.lang.String)[pri:13, instance:com.selenium.testScripts.TestScript@1593948d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="beforeEachMethod(java.lang.reflect.Method)[pri:0, instance:com.selenium.testScripts.TestScript@1593948d]" name="beforeEachMethod" is-config="true" duration-ms="6301" started-at="2020-06-20T19:44:02Z" finished-at="2020-06-20T19:44:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.selenium.testScripts.TestScript.storageTypeFilterValidation(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachMethod -->
        <test-method status="PASS" signature="storageTypeFilterValidation(java.lang.String)[pri:14, instance:com.selenium.testScripts.TestScript@1593948d]" name="storageTypeFilterValidation" duration-ms="10112" started-at="2020-06-20T19:44:08Z" data-provider="searchData" finished-at="2020-06-20T19:44:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Bookshelves]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storageTypeFilterValidation -->
        <test-method status="PASS" signature="afterEachMethod(org.testng.ITestResult)[pri:0, instance:com.selenium.testScripts.TestScript@1593948d]" name="afterEachMethod" is-config="true" duration-ms="2" started-at="2020-06-20T19:44:18Z" finished-at="2020-06-20T19:44:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=storageTypeFilterValidation status=SUCCESS method=TestScript.storageTypeFilterValidation(java.lang.String)[pri:14, instance:com.selenium.testScripts.TestScript@1593948d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="beforeEachMethod(java.lang.reflect.Method)[pri:0, instance:com.selenium.testScripts.TestScript@1593948d]" name="beforeEachMethod" is-config="true" duration-ms="6141" started-at="2020-06-20T19:44:18Z" finished-at="2020-06-20T19:44:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.selenium.testScripts.TestScript.excludeOutOfStockFilterValidation(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachMethod -->
        <test-method status="PASS" signature="excludeOutOfStockFilterValidation(java.lang.String)[pri:15, instance:com.selenium.testScripts.TestScript@1593948d]" name="excludeOutOfStockFilterValidation" duration-ms="12452" started-at="2020-06-20T19:44:24Z" data-provider="searchData" finished-at="2020-06-20T19:44:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Bookshelves]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- excludeOutOfStockFilterValidation -->
        <test-method status="PASS" signature="afterEachMethod(org.testng.ITestResult)[pri:0, instance:com.selenium.testScripts.TestScript@1593948d]" name="afterEachMethod" is-config="true" duration-ms="1" started-at="2020-06-20T19:44:37Z" finished-at="2020-06-20T19:44:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=excludeOutOfStockFilterValidation status=SUCCESS method=TestScript.excludeOutOfStockFilterValidation(java.lang.String)[pri:15, instance:com.selenium.testScripts.TestScript@1593948d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="beforeEachMethod(java.lang.reflect.Method)[pri:0, instance:com.selenium.testScripts.TestScript@1593948d]" name="beforeEachMethod" is-config="true" duration-ms="6318" started-at="2020-06-20T19:44:37Z" finished-at="2020-06-20T19:44:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.selenium.testScripts.TestScript.getBookshelvesNameAndPrice(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachMethod -->
        <test-method status="PASS" signature="getBookshelvesNameAndPrice(java.lang.String)[pri:16, instance:com.selenium.testScripts.TestScript@1593948d]" name="getBookshelvesNameAndPrice" duration-ms="21179" started-at="2020-06-20T19:44:43Z" data-provider="searchData" finished-at="2020-06-20T19:45:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Bookshelves]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getBookshelvesNameAndPrice -->
        <test-method status="PASS" signature="afterEachMethod(org.testng.ITestResult)[pri:0, instance:com.selenium.testScripts.TestScript@1593948d]" name="afterEachMethod" is-config="true" duration-ms="1" started-at="2020-06-20T19:45:04Z" finished-at="2020-06-20T19:45:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getBookshelvesNameAndPrice status=SUCCESS method=TestScript.getBookshelvesNameAndPrice(java.lang.String)[pri:16, instance:com.selenium.testScripts.TestScript@1593948d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="beforeEachMethod(java.lang.reflect.Method)[pri:0, instance:com.selenium.testScripts.TestScript@1593948d]" name="beforeEachMethod" is-config="true" duration-ms="6498" started-at="2020-06-20T19:45:04Z" finished-at="2020-06-20T19:45:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.selenium.testScripts.TestScript.getBeingatHomeCollectionsList()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachMethod -->
        <test-method status="PASS" signature="getBeingatHomeCollectionsList()[pri:17, instance:com.selenium.testScripts.TestScript@1593948d]" name="getBeingatHomeCollectionsList" duration-ms="5121" started-at="2020-06-20T19:45:11Z" finished-at="2020-06-20T19:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getBeingatHomeCollectionsList -->
        <test-method status="PASS" signature="beforeEachMethod(java.lang.reflect.Method)[pri:0, instance:com.selenium.testScripts.TestScript@1593948d]" name="beforeEachMethod" is-config="true" duration-ms="6159" started-at="2020-06-20T19:45:16Z" finished-at="2020-06-20T19:45:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.selenium.testScripts.TestScript.giftCardsLinkTextNavigationValidation()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachMethod -->
        <test-method status="PASS" signature="afterEachMethod(org.testng.ITestResult)[pri:0, instance:com.selenium.testScripts.TestScript@1593948d]" name="afterEachMethod" is-config="true" duration-ms="0" started-at="2020-06-20T19:45:16Z" finished-at="2020-06-20T19:45:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getBeingatHomeCollectionsList status=SUCCESS method=TestScript.getBeingatHomeCollectionsList()[pri:17, instance:com.selenium.testScripts.TestScript@1593948d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="giftCardsLinkTextNavigationValidation()[pri:18, instance:com.selenium.testScripts.TestScript@1593948d]" name="giftCardsLinkTextNavigationValidation" duration-ms="4486" started-at="2020-06-20T19:45:22Z" finished-at="2020-06-20T19:45:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- giftCardsLinkTextNavigationValidation -->
        <test-method status="PASS" signature="afterEachMethod(org.testng.ITestResult)[pri:0, instance:com.selenium.testScripts.TestScript@1593948d]" name="afterEachMethod" is-config="true" duration-ms="1" started-at="2020-06-20T19:45:27Z" finished-at="2020-06-20T19:45:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=giftCardsLinkTextNavigationValidation status=SUCCESS method=TestScript.giftCardsLinkTextNavigationValidation()[pri:18, instance:com.selenium.testScripts.TestScript@1593948d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="beforeEachMethod(java.lang.reflect.Method)[pri:0, instance:com.selenium.testScripts.TestScript@1593948d]" name="beforeEachMethod" is-config="true" duration-ms="6221" started-at="2020-06-20T19:45:27Z" finished-at="2020-06-20T19:45:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.selenium.testScripts.TestScript.chosenOccasionAssertion()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachMethod -->
        <test-method status="PASS" signature="chosenOccasionAssertion()[pri:19, instance:com.selenium.testScripts.TestScript@1593948d]" name="chosenOccasionAssertion" duration-ms="3966" started-at="2020-06-20T19:45:33Z" finished-at="2020-06-20T19:45:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- chosenOccasionAssertion -->
        <test-method status="PASS" signature="beforeEachMethod(java.lang.reflect.Method)[pri:0, instance:com.selenium.testScripts.TestScript@1593948d]" name="beforeEachMethod" is-config="true" duration-ms="6134" started-at="2020-06-20T19:45:37Z" finished-at="2020-06-20T19:45:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.selenium.testScripts.TestScript.giftCardsCalendarAssertion()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachMethod -->
        <test-method status="PASS" signature="afterEachMethod(org.testng.ITestResult)[pri:0, instance:com.selenium.testScripts.TestScript@1593948d]" name="afterEachMethod" is-config="true" duration-ms="0" started-at="2020-06-20T19:45:37Z" finished-at="2020-06-20T19:45:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=chosenOccasionAssertion status=SUCCESS method=TestScript.chosenOccasionAssertion()[pri:19, instance:com.selenium.testScripts.TestScript@1593948d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="giftCardsCalendarAssertion()[pri:20, instance:com.selenium.testScripts.TestScript@1593948d]" name="giftCardsCalendarAssertion" duration-ms="9886" started-at="2020-06-20T19:45:43Z" finished-at="2020-06-20T19:45:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- giftCardsCalendarAssertion -->
        <test-method status="PASS" signature="afterEachMethod(org.testng.ITestResult)[pri:0, instance:com.selenium.testScripts.TestScript@1593948d]" name="afterEachMethod" is-config="true" duration-ms="0" started-at="2020-06-20T19:45:53Z" finished-at="2020-06-20T19:45:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=giftCardsCalendarAssertion status=SUCCESS method=TestScript.giftCardsCalendarAssertion()[pri:20, instance:com.selenium.testScripts.TestScript@1593948d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="beforeEachMethod(java.lang.reflect.Method)[pri:0, instance:com.selenium.testScripts.TestScript@1593948d]" name="beforeEachMethod" is-config="true" duration-ms="6378" started-at="2020-06-20T19:45:53Z" finished-at="2020-06-20T19:45:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.selenium.testScripts.TestScript.chosenDateAssertion()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachMethod -->
        <test-method status="PASS" signature="chosenDateAssertion()[pri:21, instance:com.selenium.testScripts.TestScript@1593948d]" name="chosenDateAssertion" duration-ms="9906" started-at="2020-06-20T19:45:59Z" finished-at="2020-06-20T19:46:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- chosenDateAssertion -->
        <test-method status="PASS" signature="afterEachMethod(org.testng.ITestResult)[pri:0, instance:com.selenium.testScripts.TestScript@1593948d]" name="afterEachMethod" is-config="true" duration-ms="0" started-at="2020-06-20T19:46:09Z" finished-at="2020-06-20T19:46:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=chosenDateAssertion status=SUCCESS method=TestScript.chosenDateAssertion()[pri:21, instance:com.selenium.testScripts.TestScript@1593948d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="beforeEachMethod(java.lang.reflect.Method)[pri:0, instance:com.selenium.testScripts.TestScript@1593948d]" name="beforeEachMethod" is-config="true" duration-ms="6220" started-at="2020-06-20T19:46:09Z" finished-at="2020-06-20T19:46:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.selenium.testScripts.TestScript.giftCardsFormValidation(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachMethod -->
        <test-method status="PASS" signature="giftCardsFormValidation(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:22, instance:com.selenium.testScripts.TestScript@1593948d]" name="giftCardsFormValidation" duration-ms="12775" started-at="2020-06-20T19:46:15Z" data-provider="searchData" finished-at="2020-06-20T19:46:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sathya@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[sathya@gmail.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Coders]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[codersshelfgmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[9.87654321E9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- giftCardsFormValidation -->
        <test-method status="PASS" signature="afterEachMethod(org.testng.ITestResult)[pri:0, instance:com.selenium.testScripts.TestScript@1593948d]" name="afterEachMethod" is-config="true" duration-ms="2" started-at="2020-06-20T19:46:28Z" finished-at="2020-06-20T19:46:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=giftCardsFormValidation status=SUCCESS method=TestScript.giftCardsFormValidation(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:22, instance:com.selenium.testScripts.TestScript@1593948d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:com.selenium.testScripts.TestScript@1593948d]" name="afterTest" is-config="true" duration-ms="949" started-at="2020-06-20T19:46:28Z" finished-at="2020-06-20T19:46:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- com.selenium.testScripts.TestScript -->
    </test> <!-- E2E testing -->
  </suite> <!-- Suite -->
</testng-results>
